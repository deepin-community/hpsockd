daemon {
#	name		"sockd";
#	listen-address	{ 0.0.0.0; };
#	directory	"/var/opt/socks";
	negotiate-file	"negot_file";		# must be specified
	inetdsec-file	"@@INETDSEC@@";	# default is no inetd.sec
#	listen		{1,252};
#	client		{1,200};
#	pre-fork	1;
#	service		"socks";
#	port		1080;
#	poll		1m;
#	user		-2;
	user		"socks";
#	dns-helper	1;
#	flags		{ };
};

logging {
#	facility	"daemon";
#	level		2;
	dump-prefix	"sockd.dump";		# if not specified, you get no dumps
	usage-log	"usage.log";		# if not specified, you get no logging
};

env {
	PING="@@PING@@ %z";
	TRACEROUTE="@@TRACEROUTE@@ %z";
};

default {
#	timeout		2h;
#	setup-timeout	15m;
#	bufsize		32768;
};

route {
	{ default	host };			# must have at least one route
};

method-list {
	{ number   0; name "noAuth"; internal; flags 0; };
	{ number   2; name "userPass"; internal; flags 0; };
	{ number 254; name "v4"; internal; flags 0; };
};

client-method {
	{ src { @@MYNET@@/@@NETSIZE@@; }; method { "userPass"; "v4"; "noAuth"; }; };
};

client {
	permit traceroute {		# Let net @@MYNET@@ traceroute even net @@MYNET@@.
		src { @@MYNET@@/@@NETSIZE@@; };
	};

	deny {				# block X traffic
		port { 6000-6099; };
	};
	deny {				# Nothing bound for net @@MYNET@@, or private
		dest {	@@MYNET@@/@@NETSIZE@@; 127/8; 10/8; 172.16/12; 192.168/16; };
	};

	permit {			# give ftp control sessions longer
		src { @@MYNET@@/@@NETSIZE@@; };
		port { "ftp"; };
		timeout 1d;
	};

	permit {			# Let net @@MYNET@@ out
		src { @@MYNET@@/@@NETSIZE@@; };
		timeout 1h;
	};
	deny { };			# nuke everyone else (default action)
};
